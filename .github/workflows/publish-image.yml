# Copyright 2025 CS Group
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Publish Docker image

# Run workflow only for ...
on:
  pull_request: # pull requests
    types: [opened, synchronize, reopened]
  push:
    branches:
      - develop # pushes on the 'develop' branch
    tags:
      - '**' # new git tags (including hierarchical tags like v1.0/beta)
  workflow_dispatch: # manual trigger
    inputs:
      docker_tag:
        description: Tag the docker images as e.g. 'latest'
        required: false
env:
  DOCKER_REGISTRY: ghcr.io

jobs:

  # Calculate variables for this workflow
  set-env:
    if: github.actor != 'dependabot[bot]' # ignore pull requests by github bot
    runs-on: ubuntu-latest
    name: "Set environment"
    outputs:
      docker_tag: ${{ steps.set-env.outputs.docker_tag }}
      branch_name: ${{ steps.set-env.outputs.branch_name }}
    steps:
      - id: set-env
        name: "Set environment"
        run: |
          set -x

          # Get the current branch name (or source branch for a pull request)
          if [[ ${{ github.event_name }} == pull_request ]]; then
            branch_name=${{ github.event.pull_request.head.ref }}
          else
            branch_name=${{ github.ref_name }}
          fi

          # Determine the docker tag to set to new docker images.
          # For a pull request, use the branch name
          if [[ ${{ github.event_name }} == pull_request ]]; then
            docker_tag="$branch_name"

          # For a push on develop or a tag, use the docker tag :latest
          elif [[ ${{ github.event_name }} == push ]]; then
            docker_tag=latest

          # For a manual trigger, use the user-defined tag, or latest if empty
          elif [[ ${{ github.event_name }} == workflow_dispatch ]]; then
            docker_tag=${{ github.event.inputs.docker_tag }}
            if [[ -z "$docker_tag" ]]; then
              docker_tag=latest
            fi

          else
            >&2 echo "Unknown trigger"
            exit 1
          fi

          # Replace special characters by -
          docker_tag=$(sed "s/[^a-zA-Z0-9]/-/g" <<< "$docker_tag")

          # Save values
          echo "branch_name=$branch_name" >> $GITHUB_OUTPUT
          echo "docker_tag=$docker_tag" >> $GITHUB_OUTPUT
        shell: bash

  publish-docker-matrix:
    strategy:
      matrix:
        image: [cnpgis]
        include:
          - path: .github/workflows
            image: cnpgis
    if: github.actor != 'dependabot[bot]'
    runs-on: ubuntu-latest
    name: "Docker image for ${{ matrix.image }}"
    needs: [set-env]
    permissions: write-all
    outputs:
      docker_image: ${{ steps.publish-docker.outputs.docker_image}}
    steps:
      - uses: actions/checkout@v4

    #   - name: Copy common requirements
    #     id: copy_common_req
    #     shell: bash
    #     run: |
    #       mkdir -p ./.github/${{ matrix.path }}/resources/
    #       cp ./.github/common/resources/* ./.github/${{ matrix.path }}/resources/

      - id: publish-docker-cnpgis
        name: Publish docker cnpgis
        if: matrix.image == 'cnpgis'
        uses: ./.github/actions/publish-docker
        with:
          dockerfile: ./dockerfiles/Dockerfile.${{ matrix.image }}
          build_context_path: ./${{ matrix.path }}/
          image_suffix: -${{ matrix.image }}
          version_name: ${{ needs.set-env.outputs.docker_tag }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
